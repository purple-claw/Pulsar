[
    {
        "Tool_name" : "Above",
        "Description" : "Contains an invisible protocol sniffer for finding vulnerabilities in the network, designed for pentesters and security professionals,It is based entirely on network traffic analysis, so it does not make any noise on the air. Above allows pentesters to automate the process of finding vulnerabilities in network hardware. Discovery protocols, dynamic routing, FHRP, STP, LLMNR/NBT-NS, etc.",
        "Dependencies" : ["python3","python3-colorama","python3-scapy"],
        "Commands" : [
            {"flag": "-h", "description": "help"},
            {"flag": "--interface", "description": "Specify the interface"},
            {"flag": "--output", "description": "Specify the output pcap file to record traffic"},
            {"flag": "--timer", "description": "Specify the timer value (seconds)"},
            {"flag": "--input-pcap", "description": "Specify the input pcap file to analyze traffic"}
        ],
        "Usage" : [
            {"command": "sudo ip link set eth0 promisc on", "description": "Enable promiscuous mode on the eth0 interface."},
            {"command": "above --input-pcap dump.pcap", "description": "Execute the 'above' command with input from the dump.pcap file."},
            {"command": "Passive ARP : above --interface eth0 --passive-arp", "description": "Execute the 'above' command with passive ARP mode on the eth0 interface."}
        ],
        "Extra-Info" : "Detects upto 22 protocols"
    },
    {
        "Tool_name" : "Aesfix",
        "Description" : [ "This", "program", "implements", "a", "method", "for", "rectifying", "bit", "errors", "within", "an", 
        "AES", "key", "schedule", ",", "which", "is", "designed", "to", "be", "employed", "in", "conjunction", 
        "with", "the", "output", "generated", "by", "the", "\"aeskeyfind\"", "program", ".", "It", "specifically", 
        "targets", "AES-128", "key", "schedules", "and", "is", "capable", "of", "rectifying", "unidirectional", 
        "1->0", "bit", "errors", ".", "While", "prioritizing", "readability", "over", "performance", ",", "it", 
        "serves", "various", "purposes", ",", "including", "forensic", "investigations", "."
    ],
        "Dependencies" : ["libc6","libgcc-s1","libstdc++6"],
        "Commands" : ["None"],
        "Usage" : [
            {"command": "aesfix SCHEDULE-FILE", "description": "Correct bit errors in an AES key schedule file."}
        ],        
        "Extra-Info" : ["Corrects", "bit", "errors", "in", "an", "AES", "key", "schedule", "read", "from", "the", "specified", 
        "hex-encoded", "file", "."]
    },
    {
        "Tool_name" : "aeskeyfind",
        "Description" : ["this", "program", "illustrates", "automatic", "techniques", "for", "locating", "128bit", "and", "256bit", "aes", "keys", "in", "a", "captured", "memory", "image", "the", "program", "uses", "various", "algorithms", "and", "also", "performs", "a", "simple", "entropy", "test", "to", "filter", "out", "blocks", "that", "are", "not", "keys", "it", "counts", "the", "number", "of", "repeated", "bytes", "and", "skips", "blocks", "that", "have", "too", "many", "repeats", "this", "method", "works", "even", "if", "several", "bits", "of", "the", "key", "schedule", "have", "been", "corrupted", "due", "to", "memory", "decay", "this", "package", "is", "useful", "to", "several", "activities", "as", "forensics", "investigations"],
        "Dependencies" : ["libc6"],
        "Commands" : [{"flag": "-v", "description": "verbose Output"}, {"flag": "-q", "description": "dont display a progress bar"}, {"flag": "-t THRESHOLD", "description": "sets the maximum number of bit errors allowed in a candidate key schedule (default = 10)"}, {"flag": "-h", "description": "help"}],
        "Usage" : [
            {"command": "aeskeyfind [OPTION]... MEMORY-IMAGE", "description": "Search for AES keys in a memory image."}
        ],        
        "Extra-Info" : ["locates", "128bit", "and", "256bit", "aes", "keys", "in", "a", "captured", "memory", "image"]

    },
    {
        "Tool_name" : "affcat",
        "Description" : ["the", "advanced", "forensic", "format", "aff", "is", "ondisk", "format", "for", "storing", "computer", "forensic", "information", "critical", "features", "of", "aff", "include","aff", "allows", "you", "to", "store", "both", "computer", "forensic", "data", "and", "associated", "metadata", "in", "one", "or", "more", "files", "aff", "allows", "files", "to", "be", "digital", "signed", "to", "provide", "for", "chainofcustody", "and", "longterm", "file", "integrityaff", "allows", "for", "forensic", "disk", "images", "to", "stored", "encrypted", "and", "decrypted", "onthefly", "for", "processing", "this", "allows", "disk", "images", "containing", "privacy", "sensitive", "material", "to", "be", "stored", "on", "the", "internet"],
        "Dependencies" : ["libaffilb0v5","libc6","libxepat1","libfuse2","libgcc-s1","libssl3","libstdc++6"],
        "Commands" : [{"flag": "-s name", "description": "Just output segment name"}, {"flag": "-p ###", "description": "just output data page number ###"}, {"flag": "-S ###", "description": "Just output data sector ### (assumes 512-byte sectors). Sector #0 is first"}, {"flag": "-q", "description": "quiet; don't print to STDERR if a page is skipped"}, {"flag": "-n", "description": "noisy; tell when pages are skipped."}, {"flag": "-l", "description": "List all of the segment names"}, {"flag": "-L", "description": "List segment names, lengths, and args"}, {"flag": "-d", "description": "debug. Print the page numbers to stderr as data goes to stdout"}, {"flag": "-b", "description": "Output BADFALG for bad blocks (default is NULLs)"}, {"flag": "-v", "description": "Just print the version number and exit."}, {"flag": "-r offset:count", "description": "seek to offset and output count characters in each file; may be repeated"}],
        "Usage" : [
            {"command": "affcat [options] infile [... more infiles]", "description": "Concatenate and display the contents of one or more AFF files."}
        ],        
        "Extra-Info" : ["the", "aff", "toolkit", "provides", "these", "executables", "affcat", "affcompare", "affconvert", "affcopy", "affcrypto", "affdiskprint", "affinfo", "affix", "affrecover", "affsegment", "affsign", "affstats", "affuse", "affverify", "and", "affxml"]        
    },
    {
        "Tool_name" : "affcompare",
        "Description" : ["reports", "if", "file", "was", "successfully", "copied", "to", "amazon", "s3", "checking", "only", "for", "existence", "not", "reading", "back", "the", "bytesbecause", "all", "writes", "to", "s3", "are", "validated", "by", "the", "md5", "of", "the", "object"],
        "Dependencies" : ["libaffilb0v5","libc6","libxepat1","libfuse2","libgcc-s1","libssl3","libstdc++6"],
        "Commands" : [
            {"flag": "-p", "description": "report about the results of preening"},
            {"flag": "-e", "description": "Just report about existence (use with -r)"},
            {"flag": "-s", "description": "Just see if all of the segments are present, but don't validate the contents. (Primarily for use with Amazon S3)"},
            {"flag": "-V", "description": "just print the version number and exit"},
            {"flag": "-v", "description": "Verbose; each file as it is compared."},
            {"flag": "-q", "description": "Quiet. No output except for errors"},
            {"flag": "-a", "description": "print what's the same (all)"},
            {"flag": "-b", "description": "print the numbers of differing sectors"},
            {"flag": "-c", "description": "print the contents of differing sectors"},
            {"flag": "-m", "description": "Just report about the data (ignore metadata)"},
            {"flag": "-P ###", "description": "Just examine the differences on page ###"},
            {"flag": "-r dir1 dir2", "description": "recursively compare what's in dir1 with dir2, and report what's in dir1 that's not in dir2"}
        ],
        "Usage" : [
            {"command": "affcompare file1.aff file2.aff", "description": "Compare two AFF files."},
            {"command": "affcompare f1.aff f2.aff dir1/", "description": "Compare two AFF files or directories."},
            {"command": "affcompare -b img file.aff", "description": "Compare the contents of two files (binary comparison)."},
            {"command": "affcompare -b img file1.aff file2.aff", "description": "Compare two files (binary comparison)."},
            {"command": "affcompare -re dir1 dir2", "description": "Recursively compare the contents of two directories."},
            {"command": "affcompare -rse dir1 s3:///", "description": "Recursively compare the contents of a local directory with a directory on Amazon S3."},
            {"command": "affcompare -rs dir1 s3:///", "description": "Recursively compare the contents of a directory on Amazon S3 with a local directory."}
        ],        
        "Extra-Info" : ["compare", "the", "contents", "of", "an", "iso", "file", "to", "an", "aff", "file"]    
    },
    {
        "Tool_name" : "affconvert",
        "Description" : [],
        "Dependencies" : ["libaffilb0v5","libc6","libxepat1"],
        "Commands" : [
            {"flag": "-q", "description": "Quiet mode. Don't ask questions, don't print status."},
            {"flag": "-V", "description": "Just print the version number and exit."},
            {"flag": "-a<ext>", "description": "Use 'ext' for aff files (default is aff; afd for AFD files)."},
            {"flag": "-L", "description": "Use the LZMA compression algorithm (better but slower)."},
            {"flag": "-Mn[kmg]", "description": "Set maximum size of output file. Suffix with k, m or g. Use with -o."},
            {"flag": "-O<dir>", "description": "Use 'dir' as the output directory. Example: -Otest. Note that you need to create the directory."},
            {"flag": "-o<dir>.afd", "description": "Output to 'dir'.afd (can only convert one at a time). Consider AFF if file ends using .aff. Otherwise assumes raw. The directory must have .afd as extension in name."},
            {"flag": "-s<n>", "description": "Set the image_pagesize as 'n' (default 16777216)."}],
        "Usage" : [
            {"command": "affconvert [options] file1 [... files]", "description": ""},
            {"command": "affconvert file1.raw", "description": "Convert file.rqw into file.aff"},
            {"command": "affconvert -r file1.aff", "description": "Convert file.aff to file.raw"},
            {"command": "affconvert -M4g -odvd.afd bigfile.aff", "description": "Split an AFF File into 4GB chunks for archiving into DVD"}
        ],    
        "Extra-Info" : ["aff", "is", "an", "open", "and", "extensible", "file", "format", "to", "store", "disk", "images", "and", "associated", "metadata", "it", "is", "useful", "in", "several", "scenaries", "as", "computer", "forensics", "investiga\u2010tions"]
    },
    {
        "Tool_name" : "Affinfo",
        "Description" : [],
        "Dependencies" : ["libaffilb0v5","libc6","libxepat1"],
        "Commands" : [
            {"flag": "-a", "description": "print ALL segments (normally data segments are suppressed)"},
            {"flag": "-b", "description": "print how many bad blocks in each segment (implies -a)"},
            {"flag": "-i", "description": "identify the files, don't do info on them."},
            {"flag": "-w", "description": "wide output; print more than 1 line if necessary."},
            {"flag": "-s segment", "description": "Just print information about 'segment'. (may be repeated)"},
            {"flag": "-m", "description": "validate MD5 hash of entire image"},
            {"flag": "-S", "description": "validate SHA1 hash of entire image"},
            {"flag": "-v", "description": "validate the hash of each page (if present)"},
            {"flag": "-y", "description": "don't print segments of lengths 16 and 20 as hex"},
            {"flag": "-p<passphrase>", "description": "Specify <passphrase> to decrypt file"},
            {"flag": "-l", "description": "Just print the segment names and exit"},
            {"flag": "-V", "description": "Just print the version number and exit."},
            {"flag": "-X", "description": "no data preview; just print the segment names"},
            {"flag": "-x", "description": "print binary values in hex (default is ASCII)"},
            {"flag": "-d", "description": "debug"},
            {"flag": "-A", "description": "if infile is a device, print the number of sectors and sector size to stdout in XML. Otherwise error do this"}
        ],
        "Usage" : [{"command" : "affinfo [options] infile", "description" : ""}],
        "Extra-Info" : []
    },
    {
        "Tool_name" : "aircrack-ng",
        "Description" : ["aircrackng", "is", "a", "complete", "suite", "of", "tools", "to", "assess", "wifi", "network", "securityit", "focuses", "on", "different", "areas", "of", "wifi", "securitymonitoring", "packet", "capture", "and", "export", "of", "data", "to", "text", "files", "for", "further", "processing", "by", "third", "party", "tools", "attacking", "replay", "attacks", "deauthentication", "fake", "access", "points", "and", "others", "via", "packet", "injection", "testing", "checking", "wifi", "cards", "and", "driver", "capabilities", "capture", "and", "injection", "cracking", "wep", "and", "wpa", "psk", "wpa", "1", "and", "2all", "tools", "are", "command", "line", "which", "allows", "for", "heavy", "scripting", "a", "lot", "of", "guis", "have", "taken", "advantage", "of", "this", "feature", "it", "works", "primarily", "on", "linux", "but", "also", "windows", "macos", "freebsd", "openbsd", "netbsd", "as", "well", "as", "solaris", "and", "even", "ecomstation", "2"],
        "Dependencies" : ["ethtool","hwloc","iw","libc6","libgcc-s1","libgcrypt20","libhwloc15","libnl-3-200","libnl-genl-3-200","libpcap0.8","libprce3","libsqlite3-0","libstdc++6","python3","rfkill","usbutils","wireless-tools","zlib1g"],
        "Commands" : [
            {
                "flag": "-a <amode>",
                "description": "Force attack mode: 1/WEP, 2/WPA-PSK."
            },
            {
                "flag": "-e <essid>",
                "description": "Specify the target network identifier (ESSID)."
            },
            {
                "flag": "-b <bssid>",
                "description": "Specify the target access point's MAC address."
            },
            {
                "flag": "-p <nbcpu>",
                "description": "Specify the number of CPUs to use. By default, all CPUs are used."
            },
            {
                "flag": "-q",
                "description": "Enable quiet mode, suppressing status output."
            },
            {
                "flag": "-C <macs>",
                "description": "Merge the given Access Points to a virtual one."
            },
            {
                "flag": "-l <file>",
                "description": "Write the key to the specified file, overwriting it if it exists."
            },
            {
                "flag": "-c",
                "description": "Search alpha-numeric characters only."
            },
            {
                "flag": "-t",
                "description": "Search binary coded decimal characters only."
            },
            {
                "flag": "-h",
                "description": "Search the numeric key for Fritz!BOX."
            },
            {
                "flag": "-d <mask>",
                "description": "Use masking of the key (e.g., A1:XX:CF:YY)."
            },
            {
                "flag": "-m <maddr>",
                "description": "Specify the MAC address to filter usable packets."
            },
            {
                "flag": "-n <nbits>",
                "description": "Specify the WEP key length: 64/128/152/256/512."
            },
            {
                "flag": "-i <index>",
                "description": "Specify the WEP key index (1 to 4). Default: any."
            },
            {
                "flag": "-f <fudge>",
                "description": "Specify the bruteforce fudge factor. Default: 2."
            },
            {
                "flag": "-k <korek>",
                "description": "Disable one attack method (1 to 17)."
            },
            {
                "flag": "-x or -x0",
                "description": "Disable bruteforce for last keybytes."
            },
            {
                "flag": "-x1",
                "description": "Enable last keybyte bruteforcing (default)."
            },
            {
                "flag": "-x2",
                "description": "Enable last 2 keybytes bruteforcing."
            },
            {
                "flag": "-X",
                "description": "Disable bruteforce multithreading."
            },
            {
                "flag": "-y",
                "description": "Enable experimental single bruteforce mode."
            },
            {
                "flag": "-K",
                "description": "Use only old KoreK attacks (pre-PTW)."
            },
            {
                "flag": "-s",
                "description": "Show the key in ASCII while cracking."
            },
            {
                "flag": "-M <num>",
                "description": "Specify the maximum number of IVs to use."
            },
            {
                "flag": "-D",
                "description": "WEP decloak, skip broken keystreams."
            },
            {
                "flag": "-P <num>",
                "description": "PTW debug: 1: disable Klein, 2: PTW."
            },
            {
                "flag": "-1",
                "description": "Run only 1 try to crack the key with PTW."
            },
            {
                "flag": "-V",
                "description": "Run in visual inspection mode."
            }
        ],        
        "Usage" : [
            {
                "mode": "Basic WEP Cracking",
                "command": "aircrack-ng all-ivs.ivs",
                "description": "To have aircrack-ng conduct a WEP key attack on a capture file, pass it the filename, either in .ivs or .cap/.pcap format. Aircrack-ng 1.4"
            },
            {
                "mode": "WPA Wordlist Mode",
                "command": "aircrack-ng -w password.lst wpa.cap",
                "description": "Specify the wordlist to use (-w password.lst) and the path to the capture file (wpa.cap) containing at least one 4-way handshake."
            }
        ],        
        "Extra-Info" : []
    },
    {
        "Tool_name" : "airgraph-ng",
        "Description" : [],
        "Dependencies" : ["ethtool","hwloc","iw","libc6","libgcc-s1","libgcrypt20","libhwloc15","libnl-3-200","libnl-genl-3-200","libpcap0.8","libprce3","libsqlite3-0","libstdc++6","python3","rfkill","usbutils","wireless-tools","zlib1g"],
        "Commands" : [
            {
                "flag": "-i dump-01.csv",
                "description": "Specify the input file to use."
            },
            {
                "flag": "-o capr.png",
                "description": "Specify the output file to generate."
            },
            {
                "flag": "-g CAPR",
                "description": "Specify the graph type."
            }
        ],
        "Usage" :  [
            {
                "mode": "CAPR Graph",
                "command": "airgraph-ng -i dump-01.csv -o capr.png -g CAPR",
                "description": "Specify the input file to use (-i dump-01.csv), the output file to generate (-o capr.png) and the graph type (-g CAPR):"
            },
            {
                "mode": "CPG Graph",
                "command": "airgraph-ng -i dump-01.csv -o cpg.png -g CPG",
                "description": "Creating your Graph using, dump-01.csv and writing to, cpg.png"
            }
        ],
        "Extra-Info" : []        
    },
    {
        "Tool_name" : "wpaclean",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [],
        "Usage" : [{
            "command" : "/usr/share/doc/aircrack-ng/examples# wpaclean /root/handshakes.cap wpa-psk-linksys.cap wpa.cap",
            "description" : "Parse the provided capture files (wpa-psk-linksys.cap wpa.cap) and save any 4-way handshakes to a new file (/root/handshakes.cap):"     
        }
    ],
    "Extra-Info" : []
    },
    {
        "Tool_name" : "wesside-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [],
        "Usage" : [
            {
            "command" : "wesside-ng -i wlan0mon -v de:ad:be:ef:ca:fe",
            "description" : "Use the specified monitor mode interface (-i wlan0mon) and target a single BSSID (-v de:ad:be:ef:ca:fe)"     
        }
    ],
    "Extra-Info" : []
    },
    {
        "Tool_name" : "makeivs-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [
            {
                "flag": "-b <bssid>",
                "description": "Set the access point MAC address."
            },
            {
                "flag": "-f <num>",
                "description": "Set the number of the first IV."
            },
            {
                "flag": "-k <key>",
                "description": "Set the target network WEP key in hexadecimal format."
            },
            {
                "flag": "-s <num>",
                "description": "Set the seed used to set up the random generator."
            },
            {
                "flag": "-w <file>",
                "description": "Set the filename to write IVs into."
            },
            {
                "flag": "-c <num>",
                "description": "Set the number of IVs to generate."
            },
            {
                "flag": "-d <num>",
                "description": "Set the percentage of duplicate IVs."
            },
            {
                "flag": "-e <num>",
                "description": "Set the percentage of erroneous keystreams."
            },
            {
                "flag": "-l <num>",
                "description": "Set the length of keystreams."
            },
            {
                "flag": "-n",
                "description": "Ignore weak IVs."
            },
            {
                "flag": "-p",
                "description": "Use the PRNG algorithm to generate IVs."
            }
        ],        
        "Usage" : [
            {
            "command" : "makeivs-ng -b de:ad:be:ef:ca:fe -k 123456789ABCDEF123456789AB -w makeivs.ivs",
            "description" : "Specify a BSSID (-b de:ad:be:ef:ca:fe), WEP key (-k 123456789ABCDEF123456789AB), and output filename (-w makeivs.ivs)"     
        },
        {
            "command" : "aircrack-ng makeivs.ivs",
            "description" : "Testing the Cracked File for data"
        }
    ],
    "Extra-Info" : []
    },
    {
        "Tool_name" : "ivstools",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [],
        "Usage" : [
            {
            "command" : "ivstools --convert wep_64_ptw.cap out.ivs",
            "description" : "Strip out the initialization vectors of the provided .pcap capture and save them to a new file"     
        },
        {
            "command" : "ivstools --merge *.ivs /root/all-ivs.ivs",
            "description" : "Merge multiple IVS files into a single IVS file named 'all-ivs.ivs' located in the '/root' directory."
        }
    ],
    "Extra-Info" : []
    },
    {
        "Tool_name" : "easside-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [
            {
                "flag": "-h",
                "description": "Display this help screen."
            },
            {
                "flag": "-v <victim mac>",
                "description": "Set the victim BSSID (MAC address)."
            },
            {
                "flag": "-m <src mac>",
                "description": "Set the source MAC address."
            },
            {
                "flag": "-i <ip>",
                "description": "Set the source IP address."
            },
            {
                "flag": "-r <router ip>",
                "description": "Set the router IP address."
            },
            {
                "flag": "-s <buddy ip>",
                "description": "Set the Buddy-ng IP address (mandatory)."
            },
            {
                "flag": "-f <iface>",
                "description": "Set the interface to use (mandatory)."
            },
            {
                "flag": "-c <channel>",
                "description": "Lock the wireless card to this channel."
            },
            {
                "flag": "-n",
                "description": "Determine only the Internet IP address."
            }
        ],        
        "Usage" : [
            {
                "command": "buddy-ng",
                "description": "Run the buddy-ng tool."
            },
            {
                "command": "easside-ng -v de:ad:be:ef:ca:fe -m 3c:46:d8:4e:ef:aa -s 127.0.0.1 -f wlan0mon -c 6",
                "description": "Launch the Easside-ng attack with the following options:\n- Set the victim MAC address to 'de:ad:be:ef:ca:fe'.\n- Set the MAC address of the access point to '3c:46:d8:4e:ef:aa'.\n- Set the source IP address to '127.0.0.1'.\n- Use the wireless interface 'wlan0mon'.\n- Set the channel to '6'."
            }
        ],        
    "Extra-Info" : []
    },
    {
        "Tool_name" : "besside-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [
            {
                "flag": "-b <victim mac>",
                "description": "Set the victim BSSID (MAC address)."
            },
            {
                "flag": "-R <victim ap regex>",
                "description": "Set the victim ESSID (network name) regex pattern. PCRE (Perl Compatible Regular Expressions) is required."
            },
            {
                "flag": "-s <WPA server>",
                "description": "Upload the wpa.cap file for cracking."
            },
            {
                "flag": "-c <chan>",
                "description": "Set the channel lock."
            },
            {
                "flag": "-p <pps>",
                "description": "Set the flood rate (packets per second)."
            },
            {
                "flag": "-W",
                "description": "Enable WPA mode only."
            },
            {
                "flag": "-v",
                "description": "Verbose output. Use multiple times (-vv) for increased verbosity."
            }
        ],        
        "Usage" : [
            {
                "command": "besside-ng -W -v wlan0mon",
                "description": "Launch the besside-ng attack with the following options:\n- Attack WPA only.\n- Display verbose output.\n- Use monitor mode interface 'wlan0mon'."
            }
        ],            
        "Extra-Info" : []
    },
    {
        "Tool_name" : "airtun-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [
            {
                "flag": "-x nbpps",
                "description": "Number of packets per second (default: 100)."
            },
            {
                "flag": "-a bssid",
                "description": "Set Access Point MAC address. In WDS Mode, this sets the Receiver."
            },
            {
                "flag": "-i iface",
                "description": "Capture packets from this interface."
            },
            {
                "flag": "-y file",
                "description": "Read PRGA from this file."
            },
            {
                "flag": "-w wepkey",
                "description": "Use this WEP-KEY to encrypt packets."
            },
            {
                "flag": "-p pass",
                "description": "Use this WPA passphrase to decrypt packets (use with -a and -e)."
            },
            {
                "flag": "-e essid",
                "description": "Target network SSID (use with -p)."
            },
            {
                "flag": "-t tods",
                "description": "Send frames to AP (1) or to client (0) or tunnel them into a WDS/Bridge (2)."
            },
            {
                "flag": "-r file",
                "description": "Read frames out of pcap file."
            },
            {
                "flag": "-h MAC",
                "description": "Source MAC address."
            },
            {
                "flag": "-s transmitter",
                "description": "Set Transmitter MAC address for WDS Mode."
            },
            {
                "flag": "-b",
                "description": "Bidirectional mode. This enables communication in Transmitter's AND Receiver's networks. Works only if you can see both stations."
            },
            {
                "flag": "--repeat",
                "description": "Activates repeat mode."
            },
            {
                "flag": "--bssid <mac>",
                "description": "BSSID to repeat."
            },
            {
                "flag": "--netmask <mask>",
                "description": "Netmask for BSSID filter."
            }
        ],        
        "Usage" : [
            {
                "mode": "wIDS",
                "command": "airtun-ng -a DE:AD:BE:EF:CA:FE -w 1234567890 wlan0mon",
                "description": "Specify the BSSID of the access point to monitor as 'DE:AD:BE:EF:CA:FE' and its WEP key as '1234567890'. Then execute the airtun-ng tool using the monitor mode interface 'wlan0mon'."
            }
        ],                    
        "Extra-Info" : []
    },
    {
        "Tool_name" : "airserv-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [
            {
                "flag": "-h",
                "description": "Display this help screen."
            },
            {
                "flag": "-p <port>",
                "description": "TCP port to listen on (default: 666)."
            },
            {
                "flag": "-d <iface>",
                "description": "Wifi interface to use."
            },
            {
                "flag": "-c <chan>",
                "description": "Channel to use."
            },
            {
                "flag": "-v <level>",
                "description": "Debug level (1 to 3; default: 1)."
            }
        ],        
        "Usage" : [
            {
                "command": "airserv-ng -p 4444 -d wlan0mon -c 6",
                "description": "Start a server instance on port 4444 using the monitor mode interface 'wlan0mon' on channel 6."
            }
        ],                            
        "Extra-Info" : []
    },
    {
        "Tool_name" : "airolib-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [
            {
                "flag": "--stats",
                "description": "Output information about the database."
            },
            {
                "flag": "--sql <sql>",
                "description": "Execute the specified SQL statement."
            },
            {
                "flag": "--clean [all]",
                "description": "Clean the database from old junk. Use 'all' to also reduce filesize if possible and run an integrity check."
            },
            {
                "flag": "--batch",
                "description": "Start batch-processing all combinations of ESSIDs and passwords."
            },
            {
                "flag": "--verify [all]",
                "description": "Verify a set of randomly chosen PMKs. If 'all' is given, all invalid PMKs will be deleted."
            },
            {
                "flag": "--import [essid|passwd] <file>",
                "description": "Import a text file as a list of ESSIDs or passwords."
            },
            {
                "flag": "--import cowpatty <file>",
                "description": "Import a cowpatty file."
            },
            {
                "flag": "--export cowpatty <essid> <file>",
                "description": "Export to a cowpatty file."
            }
        ],        
        "Usage" : [
            {
                "command": "airolib-ng airolib-db --import essid /root/essid.txt",
                "description": "Specify the name of the database 'airolib-db' to use and import a file containing the ESSIDs of the network(s) targeted from '/root/essid.txt'. If the database does not exist, it will be created."
            },
            {
                "command": "airolib-ng airolib-db --import passwd /usr/share/doc/aircrack-ng/examples/password.lst",
                "description": "Import any wordlists to use for PMK computation into the 'airolib-db' database."
            },
            {
                "command": "airolib-ng airolib-db --batch",
                "description": "Use the '--batch' option to compute all PMKs for the networks stored in the 'airolib-db' database."
            },
            {
                "command": "aircrack-ng -r airolib-db /root/wpa.cap",
                "description": "Use the airolib-ng database with aircrack-ng by specifying the database name 'airolib-db' using the '-r' option when cracking the WPA key from the capture file '/root/wpa.cap'."
            }
        ],                                   
        "Extra-Info" : []
    },
    {
        "Tool_name" : "airodump-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [
            {
                "flag": "--ivs",
                "description": "Save only captured IVs."
            },
            {
                "flag": "--gpsd",
                "description": "Use GPSd."
            },
            {
                "flag": "--write <prefix>",
                "description": "Dump file prefix."
            },
            {
                "flag": "-w",
                "description": "Same as --write."
            },
            {
                "flag": "--beacons",
                "description": "Record all beacons in dump file."
            },
            {
                "flag": "--update <secs>",
                "description": "Display update delay in seconds."
            },
            {
                "flag": "--showack",
                "description": "Print ack/cts/rts statistics."
            },
            {
                "flag": "-h",
                "description": "Hide known stations for --showack."
            },
            {
                "flag": "-f <msecs>",
                "description": "Time in milliseconds between hopping channels."
            },
            {
                "flag": "--berlin <secs>",
                "description": "Time before removing the AP/client from the screen when no more packets are received. Default: 120 seconds."
            },
            {
                "flag": "-r <file>",
                "description": "Read packets from that file."
            },
            {
                "flag": "-T",
                "description": "While reading packets from a file, simulate the arrival rate of them as if they were 'live'."
            },
            {
                "flag": "-x <msecs>",
                "description": "Active Scanning Simulation."
            },
            {
                "flag": "--manufacturer",
                "description": "Display manufacturer from IEEE OUI list."
            },
            {
                "flag": "--uptime",
                "description": "Display AP Uptime from Beacon Timestamp."
            },
            {
                "flag": "--wps",
                "description": "Display WPS information (if any)."
            },
            {
                "flag": "--output-format <formats>",
                "description": "Output format. Possible values: pcap, ivs, csv, gps, kismet, netxml, logcsv."
            },
            {
                "flag": "--ignore-negative-one",
                "description": "Removes the message that says fixed channel <interface>: -1."
            },
            {
                "flag": "--write-interval <seconds>",
                "description": "Output file(s) write interval in seconds."
            },
            {
                "flag": "--background <enable>",
                "description": "Override background detection."
            },
            {
                "flag": "-n <int>",
                "description": "Minimum AP packets received before displaying it."
            },
            {
                "flag": "--encrypt <suite>",
                "description": "Filter APs by cipher suite."
            },
            {
                "flag": "--netmask <netmask>",
                "description": "Filter APs by mask."
            },
            {
                "flag": "--bssid <bssid>",
                "description": "Filter APs by BSSID."
            },
            {
                "flag": "--essid <essid>",
                "description": "Filter APs by ESSID."
            },
            {
                "flag": "--essid-regex <regex>",
                "description": "Filter APs by ESSID using a regular expression."
            },
            {
                "flag": "-a",
                "description": "Filter unassociated clients."
            },
            {
                "flag": "--ht20",
                "description": "Set channel to HT20 (802.11n)."
            },
            {
                "flag": "--ht40-",
                "description": "Set channel to HT40- (802.11n)."
            },
            {
                "flag": "--ht40+",
                "description": "Set channel to HT40+ (802.11n)."
            },
            {
                "flag": "--channel <channels>",
                "description": "Capture on specific channels."
            },
            {
                "flag": "--band <abg>",
                "description": "Band on which airodump-ng should hop."
            },
            {
                "flag": "-C <frequencies>",
                "description": "Use these frequencies in MHz to hop."
            },
            {
                "flag": "--cswitch <method>",
                "description": "Set channel switching method. 0: FIFO (default), 1: Round Robin, 2: Hop on last."
            },
            {
                "flag": "-s",
                "description": "Same as --cswitch."
            }
        ],        
        "Usage" : [
            {
                "mode": "Monitor all wireless networks, frequency hopping between all wireless channels",
                "command": "airodump-ng wlan0mon",
                "description": "Start monitoring all wireless networks and frequency hopping between all wireless channels on the wlan0mon interface."
            },
            {
                "mode": "Sniff on channel 6",
                "command": "airodump-ng -c 6 -w /root/chan6 wlan0mon",
                "description": "Sniff on channel 6 via monitor mode interface wlan0mon and save the capture to a file named 'chan6' in the '/root' directory."
            },
            {
                "mode": "Filter for access points by a specific manufacturer",
                "command": "airodump-ng -d FC:15:B4:00:00:00 -m FF:FF:FF:00:00:00 wlan0mon",
                "description": "Filter for access points by a specific manufacturer with the OUI 'FC:15:B4' and mask 'FF:FF:FF:00:00:00' on the wlan0mon interface."
            }
        ],                                    
        "Extra-Info" : []
    },
    {
        "Tool_name" : "airmon-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [],
        "Usage" : [
            {
                "mode": "Show interfaces status",
                "command": "airmon-ng",
                "description": "Show the status of wireless interfaces."
            },
            {
                "mode": "Check for interfering processes",
                "command": "airmon-ng check",
                "description": "Check for processes that might interfere with Airmon-ng and display them."
            },
            {
                "mode": "Kill interfering processes",
                "command": "airmon-ng check kill",
                "description": "Kill processes that might interfere with Airmon-ng."
            },
            {
                "mode": "Enable monitor mode on a wireless interface",
                "command": "airmon-ng start wlan0 6",
                "description": "Enable monitor mode on the 'wlan0' interface, fixed on channel 6. A new interface 'wlan0mon' will be created."
            },
            {
                "mode": "Stop monitor mode on a wireless interface",
                "command": "airmon-ng stop wlan0mon",
                "description": "Destroy the monitor mode interface 'wlan0mon' and place the wireless interface 'wlan0' back into managed mode."
            }
        ],                                    
        "Extra-Info" : []
    },
    {
        "Tool_name" : "besside-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [
            {
                "flag": "-b <victim mac>",
                "description": "Specify the Victim BSSID."
            },
            {
                "flag": "-R <victim ap regex>",
                "description": "Specify the Victim ESSID regex (requires PCRE)."
            },
            {
                "flag": "-s <WPA server>",
                "description": "Upload wpa.cap for cracking."
            },
            {
                "flag": "-c <chan>",
                "description": "Channel lock."
            },
            {
                "flag": "-p <pps>",
                "description": "Set flood rate."
            },
            {
                "flag": "-W",
                "description": "Attack WPA only."
            },
            {
                "flag": "-v",
                "description": "Verbose output. Use -vv for more verbosity."
            }
        ],        
        "Usage" : [
            {
                "command": "besside-ng -W -v wlan0mon",
                "description": "Launch the besside-ng attack with the following options:\n- Attack WPA only.\n- Display verbose output.\n- Use monitor mode interface 'wlan0mon'."
            }
        ],            
        "Extra-Info" : []
    },
    {
        "Tool_name" : "aireplay-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [
            {
                "flag": "-b bssid",
                "description": "Filter by MAC address (Access Point)."
            },
            {
                "flag": "-d dmac",
                "description": "Filter by MAC address (Destination)."
            },
            {
                "flag": "-s smac",
                "description": "Filter by MAC address (Source)."
            },
            {
                "flag": "-m len",
                "description": "Filter packets by minimum length."
            },
            {
                "flag": "-n len",
                "description": "Filter packets by maximum length."
            },
            {
                "flag": "-u type",
                "description": "Filter packets by frame control type field."
            },
            {
                "flag": "-v subt",
                "description": "Filter packets by frame control subtype field."
            },
            {
                "flag": "-t tods",
                "description": "Filter packets by frame control To DS bit."
            },
            {
                "flag": "-f fromds",
                "description": "Filter packets by frame control From DS bit."
            },
            {
                "flag": "-w iswep",
                "description": "Filter packets by frame control WEP bit."
            },
            {
                "flag": "-D",
                "description": "Disable AP detection."
            },
            {
                "flag": "-x nbpps",
                "description": "Set the number of packets per second for replay."
            },
            {
                "flag": "-p fctrl",
                "description": "Set the frame control word in hexadecimal for replay."
            },
            {
                "flag": "-a bssid",
                "description": "Set the Access Point MAC address for replay."
            },
            {
                "flag": "-c dmac",
                "description": "Set the Destination MAC address for replay."
            },
            {
                "flag": "-h smac",
                "description": "Set the Source MAC address for replay."
            },
            {
                "flag": "-g value",
                "description": "Change the ring buffer size (default: 8) for replay."
            },
            {
                "flag": "-F",
                "description": "Choose the first matching packet."
            },
            {
                "flag": "-e essid",
                "description": "Set the target AP SSID for fakeauth attack."
            },
            {
                "flag": "-o npckts",
                "description": "Set the number of packets per burst (0=auto, default: 1) for fakeauth attack."
            },
            {
                "flag": "-q sec",
                "description": "Set the seconds between keep-alives for fakeauth attack."
            },
            {
                "flag": "-Q",
                "description": "Send reassociation requests for fakeauth attack."
            },
            {
                "flag": "-y prga",
                "description": "Set the keystream for shared key authentication for fakeauth attack."
            },
            {
                "flag": "-T n",
                "description": "Exit after retrying fake auth request n times for fakeauth attack."
            },
            {
                "flag": "-j",
                "description": "Inject FromDS packets for ARP replay attack."
            },
            {
                "flag": "-k IP",
                "description": "Set the destination IP in fragments for fragmentation attack."
            },
            {
                "flag": "-l IP",
                "description": "Set the source IP in fragments for fragmentation attack."
            },
            {
                "flag": "-B",
                "description": "Activate the bitrate test for test attack."
            },
            {
                "flag": "-i iface",
                "description": "Capture packets from this interface."
            },
            {
                "flag": "-r file",
                "description": "Extract packets from this pcap file."
            },
            {
                "flag": "-R",
                "description": "Disable usage of /dev/rtc."
            },
            {
                "flag": "--ignore-negative-one",
                "description": "Ignore mismatch of interface's channel, needed for unpatched cfg80211."
            },
            {
                "flag": "--deauth-rc rc",
                "description": "Set Deauthentication reason code [0-254]. Default: 7."
            },
            {
                "flag": "--deauth count",
                "description": "Deauthenticate 1 or all stations."
            },
            {
                "flag": "--fakeauth delay",
                "description": "Fake authentication with AP."
            },
            {
                "flag": "--interactive",
                "description": "Interactive frame selection."
            },
            {
                "flag": "--arpreplay",
                "description": "Standard ARP-request replay."
            },
            {
                "flag": "--chopchop",
                "description": "Decrypt/chopchop WEP packet."
            },
            {
                "flag": "--fragment",
                "description": "Generate valid keystream."
            },
            {
                "flag": "--caffe-latte",
                "description": "Query a client for new IVs."
            },
            {
                "flag": "--cfrag",
                "description": "Fragments against a client."
            },
            {
                "flag": "--migmode",
                "description": "Attack WPA migration mode."
            },
            {
                "flag": "--test",
                "description": "Test injection mode"
            }
        ],      
        "Usage" : [
            {
                "mode": "Injection Test",
                "command": "aireplay-ng -9 wlan0mon",
                "description": "Run the injection test (-9) via the monitor mode interface wlan0mon to check if injection is working."
            },
            {
                "mode": "Deauthentication Attack",
                "command": "aireplay-ng -0 5 -a 8C:7F:3B:7E:81:B6 -c 00:08:22:B9:41:A1 wlan0mon",
                "description": "Run the deauthentication attack (-0), sending 5 packets to the wireless access point '8C:7F:3B:7E:81:B6' to deauthenticate a wireless client '00:08:22:B9:41:A1' via the monitor mode interface wlan0mon."
            },
            {
                "mode": "Fake Authentication",
                "command": "aireplay-ng -1 6000 -e FBI-Van-24 -a F0:F2:49:82:DF:3B -h 3c:46:d8:4e:ef:aa wlan0mon",
                "description": "Run the fake authentication attack and re-authenticate every 6000 seconds (-1 6000) against the access point 'F0:F2:49:82:DF:3B' with the ESSID 'FBI-Van-24', specifying the MAC address '3c:46:d8:4e:ef:aa', using the monitor mode interface wlan0mon."
            }
        ],                  
        "Extra-Info" : []
    },
    {
        "Tool_name" : "airbase-ng",
        "Description" : [],
        "Dependencies" : [],
        "Commands": [
            {
                "flag": "-a bssid",
                "description": "Set the Access Point MAC address for the attack."
            },
            {
                "flag": "-i iface",
                "description": "Capture packets from the specified interface."
            },
            {
                "flag": "-w WEP key",
                "description": "Use the specified WEP key to encrypt or decrypt packets."
            },
            {
                "flag": "-h MAC",
                "description": "Set the source MAC address for MITM (Man-in-the-Middle) mode."
            },
            {
                "flag": "-f disallow",
                "description": "Disallow specified client MAC addresses (by default, clients are allowed)."
            },
            {
                "flag": "-W 0|1",
                "description": "Set or don't set the WEP flag in beacons. '0' means don't set, '1' means set. By default, it is set automatically."
            },
            {
                "flag": "-q",
                "description": "Quiet mode. Suppress printing of statistics."
            },
            {
                "flag": "-v",
                "description": "Verbose mode. Print more messages for debugging or informational purposes."
            },
            {
                "flag": "-A",
                "description": "Ad-Hoc Mode. Allows other clients to peer."
            },
            {
                "flag": "-Y in|out|both",
                "description": "Specify external packet processing direction: incoming, outgoing, or both."
            },
            {
                "flag": "-c channel",
                "description": "Set the channel on which the Access Point is running."
            },
            {
                "flag": "-X",
                "description": "Set the hidden ESSID mode."
            },
            {
                "flag": "-s",
                "description": "Force shared key authentication."
            },
            {
                "flag": "-S",
                "description": "Set shared key challenge length. By default, it is set to 128."
            },
            {
                "flag": "-L",
                "description": "Activate the Caffe-Latte WEP attack mode. Use this if the driver cannot send frags."
            },
            {
                "flag": "-N",
                "description": "Activate the cfrag WEP attack mode. Recommended for WEP attacks."
            },
            {
                "flag": "-x nbpps",
                "description": "Set the number of packets per second. By default, it is set to 100."
            },
            {
                "flag": "-y",
                "description": "Disable responses to broadcast probes."
            },
            {
                "flag": "-0",
                "description": "Set all WPA, WEP, open tags. This option can't be used with -z and -Z."
            },
            {
                "flag": "-z type",
                "description": "Set WPA1 tags. Available types: 1=WEP40, 2=TKIP, 3=WRAP, 4=CCMP, 5=WEP104."
            },
            {
                "flag": "-Z type",
                "description": "Set WPA2 tags. Same as -z, but for WPA2."
            },
            {
                "flag": "-V type",
                "description": "Specify the fake EAPOL type. Available types: 1=MD5, 2=SHA1, 3=auto."
            },
            {
                "flag": "-F prefix",
                "description": "Write all sent and received frames into a pcap file with the specified prefix."
            },
            {
                "flag": "-P",
                "description": "Respond to all probes, even when specifying ESSIDs."
            },
            {
                "flag": "-I interval",
                "description": "Set the beacon interval value in milliseconds."
            },
            {
                "flag": "-C seconds",
                "description": "Enable beaconing of probed ESSID values. Requires -P option."
            },
            {
                "flag": "-n hex",
                "description": "Specify a user-specified ANonce when doing the 4-way handshake."
            }
        ],
        "Usage" : [
            {
                "mode": "Hirte Attack - Access Point Mode",
                "command": "airbase-ng -c 6 -e TotallyNotATrap -N -W 1 wlan0mon",
                "description": "The Hirte attack attempts to retrieve a WEP key via a client. This command creates an access point on channel 6 (-c 6) with the specified ESSID 'TotallyNotATrap'. It uses the cfrag WEP attack (-N) and sets the WEP flag in the beacons (-W 1) on the monitor mode interface wlan0mon."
            },
            {
                "mode": "Caffe Latte Attack - Access Point Mode",
                "command": "airbase-ng -c 6 -e AlsoNotATrap -L -W 1 wlan0mon",
                "description": "The Caffe Latte Attack attempts to retrieve a WEP key via a client. This command creates an access point on channel 6 (-c 6) with the specified ESSID 'AlsoNotATrap'. It uses the Caffe Latte WEP attack (-L) and sets the WEP flag in the beacons (-W 1) on the monitor mode interface wlan0mon."
            }
        ],                   
        "Extra-Info" : []
    },
    {
        "Tool_name" : "airdecap-ng",
        "Description" : [],
        "Dependencies": [],
        "Commands" : [
            {
                "flag": "-l",
                "description": "Don't remove the 802.11 header."
            },
            {
                "flag": "-b <bssid>",
                "description": "Filter by access point MAC address."
            },
            {
                "flag": "-e <essid>",
                "description": "Specify the target network SSID."
            },
            {
                "flag": "-o <fname>",
                "description": "Specify the output file for decrypted packets. Default: <src>-dec."
            },
            {
                "flag": "-w <key>",
                "description": "Specify the target network WEP key in hexadecimal."
            },
            {
                "flag": "-c <fname>",
                "description": "Specify the output file for corrupted WEP packets. Default: <src>-bad."
            },
            {
                "flag": "-p <pass>",
                "description": "Specify the target network WPA passphrase."
            },
            {
                "flag": "-k <pmk>",
                "description": "Specify the WPA Pairwise Master Key in hexadecimal."
            }
        ],        
        "Usage" :  [
            {
                "mode": "Decrypt WPA Capture",
                "command": "airdecap-ng -e test -p biscotte wpa.cap",
                "description": "With a given ESSID 'test' and password 'biscotte', decrypt the specified WPA capture file 'wpa.cap'. This command attempts to decrypt the WPA packets using the provided ESSID and password."
            },
            {
                "mode": "Verify Decryption",
                "command": "tcpdump -r wpa-dec.cap",
                "description": "Verify the decryption of the WPA capture by reading the decrypted capture file 'wpa-dec.cap' using tcpdump. This command reads the decrypted packets after attempting decryption with airdecap-ng."
            }
        ],                  
        "Extra-Info" : []
    }
]